// Plugin configurations are inherited from root project
plugins {
    id 'com.gradleup.shadow' version '8.3.0'
}

dependencies {
    // NRTSearch server dependencies
    implementation libs.nrtsearch.server

    // Apache Paimon dependencies - using latest stable 1.2.0
    implementation 'org.apache.paimon:paimon-core:1.2.0'
    implementation 'org.apache.paimon:paimon-common:1.2.0'
    implementation 'org.apache.paimon:paimon-format:1.2.0'
    implementation 'org.apache.paimon:paimon-s3:1.2.0'

    // CONSISTENT Hadoop dependencies for Paimon S3A support
    // All must be the same version to avoid conflicts.
    implementation 'org.apache.hadoop:hadoop-common:3.3.6'
    implementation 'org.apache.hadoop:hadoop-client-api:3.3.6'
    implementation 'org.apache.hadoop:hadoop-client-runtime:3.3.6'
    implementation ('org.apache.hadoop:hadoop-aws:3.3.6') {
        exclude group: 'com.amazonaws', module: 'aws-java-sdk-bundle'
    }

    implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.768')
    // AWS SDK BOM manages versions
    implementation 'com.amazonaws:aws-java-sdk-s3'
    implementation 'com.amazonaws:aws-java-sdk-core'
    implementation 'com.amazonaws:aws-java-sdk-sts'
    
    // Logging
    implementation libs.slf4j.api
    
    // Testing
    testImplementation("${libs.nrtsearch.server.get()}:tests")
    testImplementation libs.grpc.testing
    testImplementation libs.grpc.inprocess
    testImplementation libs.junit
    testRuntimeOnly libs.junit.vintage.engine
    
    // --- Needed for gRPC client and full NrtSearch tests ---
    testImplementation libs.grpc.netty.shaded
    testImplementation libs.protobuf.java
    testImplementation libs.awaitility
    testImplementation libs.assertj.core
    testImplementation libs.mockito.core
    testImplementation libs.s3mock
}

repositories {
    mavenCentral()
    mavenLocal()
}

test {
    // Use JUnit Platform with Vintage Engine for JUnit 4 compatibility
    useJUnitPlatform()
    exclude '**/*ITTest.class', '**/*E2ETest.class'
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

distributions {
    main {
        contents {
            // Use the single, self-contained uber JAR instead of many individual JARs
            from(shadowJar)

            from('src/main/plugin-metadata/plugin-metadata.yaml') {
                expand(
                        classname: 'com.yelp.nrtsearch.plugins.ingestion.paimon.PaimonIngestPlugin',
                        name: "nrtsearch-paimon-ingestion",
                        version: project.version,
                        description: 'Apache Paimon ingestion plugin for nrtsearch with Dynamic Shared Queue architecture',
                        server_version: "1.+"
                )
            }
            from('src/main/plugin-metadata/plugin-security.policy')
        }
    }
}

sourceSets {
    integration {
        java.srcDirs = ['src/test/java']
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }

    e2e {
        java.srcDirs = ['src/test/java']
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntimeOnly.extendsFrom testRuntimeOnly
    e2eImplementation.extendsFrom testImplementation
    e2eRuntimeOnly.extendsFrom testRuntimeOnly
}


task e2eTest(type: Test) {
    description = 'Runs end-to-end tests.'
    group = 'verification'
    include '**/*E2ETest.class'
    testClassesDirs = sourceSets.e2e.output.classesDirs
    classpath = sourceSets.e2e.runtimeClasspath
    useJUnitPlatform()
    jvmArgs '-Xmx4g', '-XX:MaxDirectMemorySize=2048m'
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

shadowJar {
    // Enable ZIP64 support for large archives with >65535 entries
    zip64 = true

    // This merges META-INF/services files, which is critical for Hadoop's FileSystem discovery
    mergeServiceFiles()

    // Relocate packages to prevent classpath conflicts with the main Nrtsearch application.
    // This creates a private copy of these libraries for the plugin's use only.
    relocate 'org.apache.paimon', 'com.yelp.nrtsearch.plugins.paimon.shaded.paimon'
    relocate 'org.apache.hadoop', 'com.yelp.nrtsearch.plugins.paimon.shaded.hadoop'
    relocate 'com.amazonaws', 'com.yelp.nrtsearch.plugins.paimon.shaded.amazonaws'
    relocate 'com.fasterxml.jackson', 'com.yelp.nrtsearch.plugins.paimon.shaded.jackson'
    relocate 'org.apache.http', 'com.yelp.nrtsearch.plugins.paimon.shaded.http'
    relocate 'joda-time', 'com.yelp.nrtsearch.plugins.paimon.shaded.joda'
}